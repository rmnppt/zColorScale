# you need this package for the colour palette
library(RColorBrewer)

# create the random data
dd <- data.frame(
	x = runif(100, 0, 10),
	y = runif(100, 0, 10),
	z = runif(100)
)

# pick the number of colours (granularity of colour scale)
nColors <- 100

# create the colour pallete
cols <-colorRampPalette(colors=c("white","black"))(nColors)

# get a zScale for the colours
zScale <- seq(min(dd$z), max(dd$z), length.out = nColors)

# function that returns the neazt colour given a value of z
findNeaztColour <- function(x) {
	colorIndex <- which(abs(zScale - x) == min(abs(zScale - x)))
	return(cols[colorIndex])
}

# the first plot is the scatterplot
### this has problems because points can come out on top of eachother
plot(y ~ x, dd, type = "n")
for(i in 1:dim(dd)[1]){
	with(dd[i,],
		points(y ~ x, col = findNeaztColour(z), pch = 19)
	)
}

# this is your parallel coordinates plot (a little better)
plot(1, 1, xlim = c(0, 1), ylim = c(min(dd$x, dd$y), max(dd$x, dd$y)), 
     type = "n", axes = F, ylab = "", xlab = "")
for(i in 1:dim(dd)[1]){
	with(dd[i,],
		segments(0, x, 1, y, col = findNeaztColour(z))
	)
}
